apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssf-hub
  labels:
    app: ssf-hub
    component: event-broker
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ssf-hub
  template:
    metadata:
      labels:
        app: ssf-hub
        component: event-broker
        version: v1.0.0
    spec:
      serviceAccountName: ssf-hub-ksa
      containers:
      - name: ssf-hub
        image: your-registry/ssf-hub:latest
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: GCP_PROJECT_ID
          value: "your-project-id"
        - name: PUBSUB_TOPIC_PREFIX
          value: "ssf-events"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/var/secrets/google/service-account-key.json"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: ssf-hub-secrets
              key: jwt-secret
        - name: SERVER_PORT
          value: "8080"
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_FORMAT
          value: "json"
        volumeMounts:
        - name: google-cloud-key
          mountPath: /var/secrets/google
          readOnly: true
        - name: config-volume
          mountPath: /etc/config
          readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: google-cloud-key
        secret:
          secretName: ssf-hub-sa
      - name: config-volume
        configMap:
          name: ssf-hub-config
      # Security context for pod
      securityContext:
        fsGroup: 1001
      # Resource constraints
      tolerations:
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "amd64"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: ssf-hub-service
  labels:
    app: ssf-hub
    component: event-broker
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: ssf-hub
---
# External service for SSF transmitters
apiVersion: v1
kind: Service
metadata:
  name: ssf-hub-external
  labels:
    app: ssf-hub
    component: event-broker
  annotations:
    cloud.google.com/load-balancer-type: "External"
spec:
  type: LoadBalancer
  ports:
  - port: 443
    targetPort: 8080
    protocol: TCP
    name: https
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: ssf-hub
---
# Service account for RBAC
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ssf-hub-ksa
  annotations:
    # For GKE Workload Identity (replace with your service account)
    iam.gke.io/gcp-service-account: ssf-hub@your-project-id.iam.gserviceaccount.com
---
# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: ssf-hub-config
data:
  config.yaml: |
    server:
      host: "0.0.0.0"
      port: 8080
      read_timeout: "30s"
      write_timeout: "30s"
      idle_timeout: "120s"

    pubsub:
      project_id: "your-project-id"
      topic_prefix: "ssf-events"
      max_concurrent_handlers: 10
      max_outstanding_messages: 1000
      max_outstanding_bytes: 1000000000
      enable_message_ordering: true
      ack_deadline: 60
      retention_duration: 168

    auth:
      require_auth: false
      token_expiration: 24

    logging:
      level: "info"
      format: "json"
---
# Secret for sensitive configuration
apiVersion: v1
kind: Secret
metadata:
  name: ssf-hub-secrets
type: Opaque
data:
  # Generate with: echo -n "your-secret-here" | base64
  jwt-secret: eW91ci1zZWNyZXQtaGVyZQ==  # Replace with actual base64 encoded secret